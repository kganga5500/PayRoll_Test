// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaylocityProduct.Infrastructure.Context;

namespace PaylocityProduct.Infrastructure.Migrations
{
    [DbContext(typeof(PayrollDBContext))]
    partial class PayrollDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaylocityProduct.Domain.Models.BenefitCost", b =>
                {
                    b.Property<byte>("BenefitCostId")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BenefitCostId");

                    b.ToTable("BenefitCosts");

                    b.HasData(
                        new
                        {
                            BenefitCostId = (byte)1,
                            Rate = 1000m
                        },
                        new
                        {
                            BenefitCostId = (byte)2,
                            Rate = 500m
                        });
                });

            modelBuilder.Entity("PaylocityProduct.Domain.Models.Dependent", b =>
                {
                    b.Property<long>("DependentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("BenefitCostId")
                        .HasColumnType("tinyint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DependentId");

                    b.HasIndex("BenefitCostId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("PaylocityProduct.Domain.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<byte>("BenefitCostId")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BenefitCostId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PaylocityProduct.Domain.Models.Dependent", b =>
                {
                    b.HasOne("PaylocityProduct.Domain.Models.BenefitCost", "BenefitCost")
                        .WithMany()
                        .HasForeignKey("BenefitCostId")
                        .IsRequired();

                    b.HasOne("PaylocityProduct.Domain.Models.Employee", null)
                        .WithMany("Dependents")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();
                });

            modelBuilder.Entity("PaylocityProduct.Domain.Models.Employee", b =>
                {
                    b.HasOne("PaylocityProduct.Domain.Models.BenefitCost", "BenefitCost")
                        .WithMany()
                        .HasForeignKey("BenefitCostId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
